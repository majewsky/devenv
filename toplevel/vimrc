filetype plugin off

function! SwitchSourceHeader()
	"update!
	if (expand ("%:e") == "cpp")
		find %:t:r.h
	else
		find %:t:r.cpp
	endif
endfunction
nmap ,s :call SwitchSourceHeader()<CR>

"config and keybindings for BufExplorer plugin
let g:bufExplorerSortBy='name'
nmap ,, <Leader>be

"filetype plugin on
set autoindent
set background=dark
set cindent
set hlsearch
set incsearch
set linebreak
set mouse=a
set number
set shiftwidth=4
set smarttab
set tabstop=4
set wildmode=longest:full
set wildmenu
syntax enable

" remove highlighting of search matches
noremap , :nohl<CR>:<BS>
" after repeating commands, put the cursor at the start of the change
map . .`[
" after adjusting indentation in visual mode, restore selection for further changes
vnoremap > >gv
vnoremap < <gv
" disable q: command for opening the command line window
map q: <Nop>

" setup color scheme, highlight interesting whitespace
set t_Co=256

if hostname() == "ptpcp11"
	autocmd ColorScheme * highlight MyTab ctermbg=242
	autocmd ColorScheme * highlight MySpace ctermbg=245
else
	autocmd ColorScheme * highlight MyTab ctermbg=235
	autocmd ColorScheme * highlight MySpace ctermbg=238
endif

if hostname() == "ptpcp11"
	let g:gardener_light_comments=1
	colo gardener
else
	colo transparent
endif

autocmd Syntax * syntax match MyTab /^\t\+/
autocmd Syntax * syntax match MySpace /\s\+$/

"formatting style for Python code and changelogs in our working group
autocmd FileType python setlocal expandtab smarttab nocindent tabstop=4 softtabstop=4
autocmd FileType python map <F5> :w<CR>:!python "%"<CR>
autocmd FileType changelog setlocal expandtab smarttab tabstop=4 softtabstop=4

autocmd FileType tex map <F5> :w<CR>:wa<CR>:make<CR>
autocmd FileType tex map <F6> :!xdg-open %<.pdf &>/dev/null &disown<CR><CR>
autocmd FileType tex setlocal nocindent

" enable pair matching for angle brackets (e.g. C++ templates)
autocmd FileType cpp setlocal matchpairs+=<:>
