HISTFILE=~/.histfile
HISTSIZE=100000
SAVEHIST=100000
PROMPT="\$($HOME/.devenv/bin/prettyprompt.py \$COLUMNS 2>/dev/null)"
export PRETTYPROMPT_SHELL="zsh"
setopt autocd noautoparamslash autopushd nobeep nobgnice correct extendedglob noflowcontrol globdots histexpiredupsfirst histignoredups nohup incappendhistory longlistjobs nopromptcr promptsubst pushdminus pushdsilent pushdtohome rcquotes recexact
#setopt appendhistory nomatch notify
unsetopt beep
bindkey -e

source ~/.profile
test -s ~/.profile.local && . ~/.profile.local || true

FPATH="$FPATH:$HOME/.zsh-functions"
autoload compinit
compinit
# The following lines were added by compinstall
#zstyle :compinstall filename '/home/stefan/.zshrc'
# End of lines added by compinstall

# Keybindings für Sondertasten
bindkey "^[[2~" yank                    # Insert
bindkey "^[[3~" delete-char             # Del
bindkey "^[[5~" up-line-or-history      # PageUp
bindkey "^[[6~" down-line-or-history    # PageDown
bindkey "^E"    expand-cmd-path         # C-e for expanding path of typed command.
bindkey "^[[A"  history-beginning-search-backward       # Up arrow for back-history-search.
bindkey "^[[B"  history-beginning-search-forward        # Down arrow for fwd-history-search.
bindkey " "     magic-space             # Do history expansion on space.
case "$TERM" in
        linux|screen)
                bindkey "^[[1~" beginning-of-line       # Pos1
                bindkey "^[[4~" end-of-line             # End
        ;;
        *xterm*|(dt|k)term)
                bindkey "^[[H"  beginning-of-line       # Pos1
                bindkey "^[[F"  end-of-line             # End
                bindkey "^[[7~" beginning-of-line       # Pos1
                bindkey "^[[8~" end-of-line             # End
        ;;
        rxvt|Eterm)
                bindkey "^[[7~" beginning-of-line       # Pos1
                bindkey "^[[8~" end-of-line             # End
        ;;
esac

# Alias für Detached Launching
alias -g "\&"="&>/dev/null&|"
# Aliase für Git-Zugriff aus ~/.gitconfig erstellen
perl -n -e '$c=$1if/^\[(.*)\]/;print join("\t",($c,$1,$2))if/^\s*(\w*?)\s*=\s*([^=]*$)/;' < $HOME/.gitconfig | grep '^alias\b' | cut -f2- | while read git_alias git_command; do
	alias $git_alias="git $git_command"
done
unset git_alias git_command

# misc. Aliase (hier anstelle von .profile wegen Verwendung von zsh-Funktionen)
alias qg="qgit --all &>/dev/null &|"

# taken from http://zshwiki.org/home/zle/bindkeys
# by default: export WORDCHARS='*?_-.[]~=/&;!#$%^(){}<>'
# we take out the slash, period, angle brackets here.
export WORDCHARS='*?_-[]~=&;!#$%^(){}'

# helper functions for KDE development
# idea from http://techbase.kde.org/Getting_Started/Increased_Productivity_in_KDE4_with_Scripts/.bashrc

function find_direct_build_dir() { # argument: path to directory
	# go inside build hierarchy if not in it already
	if [ "$(relpath "$BUILD_ROOT" "$1" | head -c2)" = ".." ]; then
		echo -n "$BUILD_ROOT"
	fi
	abspath "$1"
}

function find_direct_source_dir() { # argument: path to directory
	if [ "$(relpath "$BUILD_ROOT" "$1" | head -c2)" = "./" ]; then
		echo "$1" | sed "s,^$BUILD_ROOT,,"
	else
		echo "$1"
	fi
}

function chpwd() { # no arguments (hook; is called by cd)
	export B="$(find_direct_build_dir "$(pwd)")"
	export S="$(find_direct_source_dir "$(pwd)")"
}
chpwd # initialize $B and $S

function cb() { # no arguments
	cd $B
}

function cs() { # no arguments
	cd $S
}

# key bindings
bindkey '^Z' undo

function psgrep() { # all arguments passed to grep
	ps aux | sed -n '1p;/\<sed\>/d;/'"$1"'/p'
}

[ -d "$HOME/GMT" -a -n "$KONSOLE_DBUS_SESSION" -a "$HOME" = "$PWD" ] && cd "$HOME/GMT"
